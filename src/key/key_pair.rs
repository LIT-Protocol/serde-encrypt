//! X25519 key-pair (public-key and private-key).

use self::{
    private_key::{ReceiverPrivateKey, SenderPrivateKey},
    public_key::{ReceiverPublicKey, SenderPublicKey},
};

pub(in crate::key) mod private_key;
pub(in crate::key) mod public_key;

/// X25519 Key-pair generated by sender.
#[derive(Clone, Debug)]
pub struct SenderKeyPair {
    sender_private_key: SenderPrivateKey,
    sender_public_key: SenderPublicKey,
}

impl SenderKeyPair {
    /// Generates a key-pair for message sender.
    pub fn generate() -> Self {
        todo!()
    }

    /// Ref to private key.
    pub fn private_key(&self) -> &SenderPrivateKey {
        &self.sender_private_key
    }

    /// Ref to public key.
    pub fn public_key(&self) -> &SenderPublicKey {
        &self.sender_public_key
    }
}

/// X25519 Key-pair generated by receiver.
#[derive(Clone, Debug)]
pub struct ReceiverKeyPair {
    receiver_private_key: ReceiverPrivateKey,
    receiver_public_key: ReceiverPublicKey,
}

impl ReceiverKeyPair {
    /// Generates a key-pair for message receiver.
    pub fn generate() -> Self {
        todo!()
    }

    /// Ref to private key.
    pub fn private_key(&self) -> &ReceiverPrivateKey {
        &self.receiver_private_key
    }

    /// Ref to public key.
    pub fn public_key(&self) -> &ReceiverPublicKey {
        &self.receiver_public_key
    }
}
